From 7a30593142e5b433799f6ade88f057099c6820fa Mon Sep 17 00:00:00 2001
From: Patrick Hanckmann <patrick.hanckmann@tno.nl>
Date: Sat, 24 Jan 2015 08:31:44 +0100
Subject: [PATCH] restored cmake files

---
 CMakeLists.txt          | 29 +++++++++++++++++++++++++++++
 src/CMakeLists.txt      | 17 +++++++++++++++++
 src/demo/CMakeLists.txt | 13 +++++++++++++
 3 files changed, 59 insertions(+)
 create mode 100644 CMakeLists.txt
 create mode 100644 src/CMakeLists.txt
 create mode 100644 src/demo/CMakeLists.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..22fe73b
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,29 @@
+#################################################################
+#   Termbox - A ncurses alternative
+#
+#   Author: nsf - no.smile.face@gmail.com
+#   Website: http://code.google.com/p/termbox/
+#
+#   Termbox library is a simple and clean ncurses alternative.
+#   Of course everything has it's own price.
+#   In this case it's portability and stability.
+#
+#   Modified by: ykj - youngkevinjonas@gmail.com
+#   On: May 5th 2012
+#   I have completely reorganized the project
+#   while leaving most of the code intact (fixed
+#   a couple of warnings). Now you can either use
+#   it as a dependency for a C/C++ project by employing
+#   CMake, or you can install it as a Python package
+#   by using Python distutils and Cython.
+#
+#   This file constitutes the CMake build.
+#################################################################
+
+CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
+
+PROJECT(TERMBOX C)
+
+SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -std=gnu99")
+
+ADD_SUBDIRECTORY(src)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
new file mode 100644
index 0000000..e5cfcbf
--- /dev/null
+++ b/src/CMakeLists.txt
@@ -0,0 +1,17 @@
+SET(TERMBOX_LIB_SRC
+#    ${CMAKE_CURRENT_SOURCE_DIR}/input.c
+#    ${CMAKE_CURRENT_SOURCE_DIR}/ringbuffer.c
+#    ${CMAKE_CURRENT_SOURCE_DIR}/term.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/termbox.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/utf8.c
+)
+
+ADD_LIBRARY(termbox STATIC ${TERMBOX_LIB_SRC})
+
+OPTION(TERMBOX_SHARED "Build static library for use in shared libraries (uses fPIC)" OFF)
+
+IF(TERMBOX_SHARED)
+    SET_TARGET_PROPERTIES(termbox PROPERTIES COMPILE_FLAGS -fPIC)
+ENDIF(TERMBOX_SHARED)
+
+ADD_SUBDIRECTORY(demo)
diff --git a/src/demo/CMakeLists.txt b/src/demo/CMakeLists.txt
new file mode 100644
index 0000000..ca6aec8
--- /dev/null
+++ b/src/demo/CMakeLists.txt
@@ -0,0 +1,13 @@
+SET(KEYBOARD_SRC
+    ${CMAKE_CURRENT_SOURCE_DIR}/keyboard.c
+)
+
+ADD_EXECUTABLE(keyboard ${KEYBOARD_SRC})
+TARGET_LINK_LIBRARIES(keyboard termbox)
+
+SET(OUTPUT_SRC
+    ${CMAKE_CURRENT_SOURCE_DIR}/output.c
+)
+
+ADD_EXECUTABLE(output ${OUTPUT_SRC})
+TARGET_LINK_LIBRARIES(output termbox)
-- 
2.2.2

